name: Build & Publish Docs
on:
  push:
    branches: ["**"]
  workflow_dispatch: {}

concurrency:
  group: docs-${{ github.repository }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  docs:
    runs-on: ubuntu-latest
    env:
      REPO_SLUG: ${{ github.repository }}
      BRANCH_NAME: ${{ github.ref_name }}
      REMOTE_BASE: /srv/app/wiki
      SSH_HOST: ${{ secrets.VPS_HOST }}
      SSH_USER: ${{ secrets.VPS_USER }}
      SSH_PORT: ${{ secrets.VPS_PORT }}
      WIKI_TOKEN: ${{ secrets.WIKI_TOKEN }}
      WIKI_EMAIL: ${{ secrets.WIKI_GIT_EMAIL || 'ci-bot@users.noreply.github.com' }}
      WIKI_NAME:  ${{ secrets.WIKI_GIT_NAME  || 'Docs CI Bot' }}
      DOCS_BASE_URL: ${{ secrets.DOCS_BASE_URL || 'http://89.117.36.132/docs' }}

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, submodules: recursive }

      - name: Install Doxygen + Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Build docs (Doxygen)
        run: |
          test -f Doxyfile || (echo "Missing Doxyfile" && exit 1)
          doxygen Doxyfile

      - name: Prepare SSH
        run: |
          mkdir -p ~/.ssh
          printf "%s" "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "PORT=${SSH_PORT:-22}" >> $GITHUB_ENV
          ssh-keyscan -p "${SSH_PORT:-22}" "$SSH_HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy HTML to VPS (branch-scoped)
        run: |
          TARGET="${REMOTE_BASE}/${REPO_SLUG}/${BRANCH_NAME}"
          echo "Deploying to: ${SSH_HOST}:${TARGET}"
          ssh -i ~/.ssh/id_ed25519 -p "${PORT}" "${SSH_USER}@${SSH_HOST}" "mkdir -p '${TARGET}.tmp' && chmod -R 755 '${REMOTE_BASE}'"
          rsync -avz --delete -e "ssh -i ~/.ssh/id_ed25519 -p ${PORT}" docs/_doxygen/html/ "${SSH_USER}@${SSH_HOST}":"${TARGET}.tmp/"
          ssh -i ~/.ssh/id_ed25519 -p "${PORT}" "${SSH_USER}@${SSH_HOST}" "rm -rf '${TARGET}.bak' && mv '${TARGET}' '${TARGET}.bak' 2>/dev/null || true && mv '${TARGET}.tmp' '${TARGET}' && rm -rf '${TARGET}.bak'"

      - name: Compute public docs URL
        id: puburl
        run: |
          echo "url=${DOCS_BASE_URL}/${REPO_SLUG}/${BRANCH_NAME}/index.html" >> $GITHUB_OUTPUT

      - name: Update GitHub Wiki
        run: |
          set -euo pipefail
          WIKI_URL="https://x-access-token:${WIKI_TOKEN}@github.com/${REPO_SLUG}.wiki.git"
          git config --global user.email "${WIKI_EMAIL}"
          git config --global user.name  "${WIKI_NAME}"
          rm -rf wiki && git clone "${WIKI_URL}" wiki
          cd wiki
          REPO_NAME="$(echo "${REPO_SLUG}" | cut -d'/' -f2)"
          cat > Home.md << 'EOF'
# Project Documentation
This wiki updates automatically on each push. Full API docs are deployed per branch to our website.
- Use the Sidebar to jump to branches.
EOF
          cat > _Sidebar.md << EOF
# ${REPO_NAME} Wiki
- [[Home|Home]]
- Branch Docs
  - [[${BRANCH_NAME}|${BRANCH_NAME}]]
EOF
          cat > "${BRANCH_NAME}.md" << EOF
# ${REPO_NAME} â€” ${BRANCH_NAME}
Latest generated API docs for \`${BRANCH_NAME}\`:
- **HTML site:** [Open docs](${{ steps.puburl.outputs.url }})
_Updated by CI on $(date -u +"%Y-%m-%d %H:%M:%S UTC")._
EOF
          git add -A
          git commit -m "docs(wiki): update for ${BRANCH_NAME}" || true
          git push